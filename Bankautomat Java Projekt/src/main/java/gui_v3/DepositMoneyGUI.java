/*
 * DepositMoneyGUI.java
 *
 * Created on 2020-09-17
 *
 * Copyright (C) 2020 Volkswagen AG, All rights reserved.
 */

package gui_v3;

import java.awt.*;
import java.util.ArrayList;
import java.util.HashMap;

import javax.swing.*;

import atm.ATM;
import currency.Currency;
import moneynote.Moneynote;

public class DepositMoneyGUI extends GUI_v3 {

    private JButton backButton;
    private JPanel dynamicComponentsPanel;
    private JButton depositButton;
    private JPanel mainPanel;
    private HashMap<Integer, JTextField> textFields;
    private ArrayList<JLabel> labels;

    protected DepositMoneyGUI(final JFrame parentFrame, final ATM atm) throws HeadlessException {
        super(parentFrame, atm);

        add(mainPanel);

        dynamicComponentsPanel.setVisible(true);
        dynamicComponentsPanel.setLayout(
                new GridLayout(Currency.getAllPossibleMoneyNotes(getAtm().getCurrency()).size(), 2));

        generateComponents();

        depositButton.addActionListener(e -> depositeMoney());
        backButton.addActionListener(e -> goBack());
    }

    private void generateComponents() {

        textFields = new HashMap<>();
        labels = new ArrayList<>();

        JLabel templabel;
        JTextField tempTextField;

        for (final Integer i : Currency.getAllPossibleMoneyNotes(getAtm().getCurrency())) {

            templabel = new JLabel(i.toString() + ":");
            tempTextField = new JTextField();

            labels.add(templabel);
            textFields.put(i, tempTextField);
        }

        for (final JLabel comp : labels) {

            dynamicComponentsPanel.add(comp);
            dynamicComponentsPanel.add(textFields.get(Integer.parseInt(comp.getText().split(":")[0])));
        }
    }

    private boolean areTextFieldsEmpty() {

        for (JTextField textField : textFields.values()) {

            if (!textField.getText().isEmpty()) {

                return false;
            }
        }

        return true;
    }

    private void depositeMoney() {

        if (areTextFieldsEmpty()) {
            return;
        }

        getAtm().depositMoney(createDepositMoneynoteMap());
    }

    private HashMap<Moneynote, Integer> createDepositMoneynoteMap() {

        HashMap<Moneynote, Integer> notes = new HashMap<>();

        textFields.forEach(
                (integer, textField) -> {

                    final Integer amount;

                    if (!textField.getText().isEmpty()) {

                        try {
                            amount = Integer.parseInt(textField.getText());
                        } catch (final NumberFormatException e) {
                            showErrorDialog("Error", "invalid value");
                            return;
                        }

                        notes.put(new Moneynote(integer), amount);
                    }
                });

        return notes;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }
    /**
     * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR call it in your
     * code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(4, 3, new Insets(0, 0, 0, 0), -1, -1));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        mainPanel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 2, 2,
                                                                                com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                                com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                                com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW,
                                                                                1, null, null, null, 0, false));
        backButton = new JButton();
        backButton.setText("back");
        mainPanel.add(backButton, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 2, 1,
                                                                                   com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                                   com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                                   com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK
                                                                                   | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW,
                                                                                   com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                                   null, null, null, 0, false));
        depositButton = new JButton();
        depositButton.setText("Deposit");
        mainPanel.add(depositButton, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 3,
                                                                                      com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                                      com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,
                                                                                      com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK
                                                                                      | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW,
                                                                                      com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,
                                                                                      null, null, null, 0, false));
        dynamicComponentsPanel = new JPanel();
        dynamicComponentsPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        mainPanel.add(dynamicComponentsPanel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 3,
                                                                                               com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,
                                                                                               com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH,
                                                                                               1, 1, null, null, null,
                                                                                               0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
